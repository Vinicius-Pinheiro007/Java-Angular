{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../clientes-api.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common/http\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/card\";\n\nfunction ClientesFormComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Informe o nome\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClientesFormComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Informe o CPF/CNPJ\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ClientesFormComponent = /*#__PURE__*/(() => {\n  class ClientesFormComponent {\n    constructor(fb, api, snack, router, route, http) {\n      this.fb = fb;\n      this.api = api;\n      this.snack = snack;\n      this.router = router;\n      this.route = route;\n      this.http = http;\n      this.form = this.fb.group({\n        id: [undefined],\n        nome: ['', [Validators.required]],\n        documento: ['', [Validators.required]]\n      });\n    }\n\n    ngOnInit() {\n      const id = this.route.snapshot.paramMap.get('id');\n\n      if (id) {\n        this.http.get(`${location.origin.replace('4200', '8080')}/clientes/${id}`).subscribe(c => this.form.patchValue(c));\n      }\n    }\n\n    salvar() {\n      if (this.form.invalid) {\n        this.snack.open('Informe o nome', 'Fechar', {\n          duration: 3000\n        });\n        return;\n      }\n\n      const c = this.form.value;\n\n      if (c.id) {\n        this.http.put(`${location.origin.replace('4200', '8080')}/clientes/${c.id}`, c).subscribe({\n          next: () => {\n            this.snack.open('Cliente salvo', 'Fechar', {\n              duration: 2000\n            });\n            this.router.navigate(['/clientes']);\n          },\n          error: () => this.snack.open('Erro ao salvar', 'Fechar', {\n            duration: 3000\n          })\n        });\n      } else {\n        this.http.post(`${location.origin.replace('4200', '8080')}/clientes`, c).subscribe({\n          next: () => {\n            this.snack.open('Cliente salvo', 'Fechar', {\n              duration: 2000\n            });\n            this.router.navigate(['/clientes']);\n          },\n          error: () => this.snack.open('Erro ao salvar', 'Fechar', {\n            duration: 3000\n          })\n        });\n      }\n    }\n\n  }\n\n  ClientesFormComponent.ɵfac = function ClientesFormComponent_Factory(t) {\n    return new (t || ClientesFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ClientesApiService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.HttpClient));\n  };\n\n  ClientesFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientesFormComponent,\n    selectors: [[\"app-clientes-form\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"nome\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"documento\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-button\", \"\", \"type\", \"button\", \"routerLink\", \"/clientes\"]],\n    template: function ClientesFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n        i0.ɵɵtext(2, \"Cliente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ClientesFormComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.salvar();\n        });\n        i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵtemplate(9, ClientesFormComponent_mat_error_9_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 1)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"CPF/CNPJ\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵelementStart(14, \"mat-hint\");\n        i0.ɵɵtext(15, \"Somente n\\u00FAmeros (ser\\u00E1 validado)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, ClientesFormComponent_mat_error_16_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 5);\n        i0.ɵɵtext(18, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 6);\n        i0.ɵɵtext(20, \"Cancelar\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.nome.hasError(\"required\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.documento.hasError(\"required\"));\n      }\n    },\n    dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i7.MatButton, i8.MatError, i8.MatFormField, i8.MatHint, i8.MatLabel, i9.MatInput, i10.MatCard, i10.MatCardContent, i10.MatCardTitle, i4.RouterLink],\n    styles: [\".full-width[_ngcontent-%COMP%]{width:100%}mat-card[_ngcontent-%COMP%]{max-width:500px;margin:0 auto}\"]\n  });\n  return ClientesFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}