{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../pedidos-api.service\";\nimport * as i3 from \"../../produtos/produtos-api.service\";\nimport * as i4 from \"../../clientes/clientes-api.service\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\n\nfunction PedidosFormComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r3.nome);\n  }\n}\n\nfunction PedidosFormComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Informe o cliente\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PedidosFormComponent_div_19_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const p_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", p_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", p_r7.nome, \" - \", i0.ɵɵpipeBind2(2, 3, p_r7.preco, \"BRL\"), \"\");\n  }\n}\n\nfunction PedidosFormComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"mat-form-field\", 13)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Produto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 14);\n    i0.ɵɵlistener(\"selectionChange\", function PedidosFormComponent_div_19_Template_mat_select_selectionChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r5 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onProdutoSelected(i_r5, $event.value));\n    });\n    i0.ɵɵtemplate(5, PedidosFormComponent_div_19_mat_option_5_Template, 3, 6, \"mat-option\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 13)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Quantidade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-form-field\", 13)(11, \"mat-label\");\n    i0.ɵɵtext(12, \"Valor Unit\\u00E1rio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"mat-form-field\", 1)(15, \"mat-label\");\n    i0.ɵɵtext(16, \"N\\u00FAmero de S\\u00E9rie\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function PedidosFormComponent_div_19_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r5 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.removeItem(i_r5));\n    });\n    i0.ɵɵtext(19, \"Remover\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const it_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", it_r4.value.produtoId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.produtos);\n  }\n}\n\nexport let PedidosFormComponent = /*#__PURE__*/(() => {\n  class PedidosFormComponent {\n    constructor(fb, api, produtosApi, clientesApi, snack, router, route) {\n      this.fb = fb;\n      this.api = api;\n      this.produtosApi = produtosApi;\n      this.clientesApi = clientesApi;\n      this.snack = snack;\n      this.router = router;\n      this.route = route;\n      this.form = this.fb.group({\n        clienteId: [null, [Validators.required]],\n        itens: this.fb.array([])\n      });\n      this.saving = false;\n      this.produtos = [];\n      this.clientes = [];\n    }\n\n    ngOnInit() {\n      this.produtosApi.listar().subscribe(ps => this.produtos = ps);\n      this.clientesApi.listar().subscribe(cs => this.clientes = cs);\n      const id = this.route.snapshot.paramMap.get('id');\n\n      if (id) {\n        this.api.buscar(+id).subscribe(p => {\n          this.form.patchValue({\n            clienteId: p.clienteId\n          });\n          this.itens.clear();\n          (p.itens || []).forEach(it => this.itens.push(this.fb.group({\n            produtoId: [it.produtoId, Validators.required],\n            quantidade: [it.quantidade, [Validators.required, Validators.min(1)]],\n            valorUnitario: [it.valorUnitario, [Validators.required, Validators.min(0.01)]],\n            numeroSerie: [it.numeroSerie || '']\n          })));\n        });\n      }\n    }\n\n    get itens() {\n      return this.form.get('itens');\n    }\n\n    addItem() {\n      this.itens.push(this.fb.group({\n        produtoId: [null, Validators.required],\n        quantidade: [1, [Validators.required, Validators.min(1)]],\n        valorUnitario: [null, [Validators.required, Validators.min(0.01)]],\n        numeroSerie: ['']\n      }));\n    }\n\n    removeItem(index) {\n      this.itens.removeAt(index);\n    }\n\n    get total() {\n      return this.itens.controls.reduce((acc, ctrl) => {\n        const q = Number(ctrl.value?.quantidade) || 0;\n        const vu = Number(ctrl.value?.valorUnitario) || 0;\n        return acc + q * vu;\n      }, 0);\n    }\n\n    onProdutoSelected(index, produtoId) {\n      const p = this.produtos.find(pp => pp.id === produtoId);\n      const vu = p ? p.preco : null;\n      this.itens.at(index).patchValue({\n        produtoId,\n        valorUnitario: vu\n      });\n    }\n\n    salvar() {\n      if (this.form.invalid) {\n        this.snack.open('Preencha os campos corretamente', 'Fechar', {\n          duration: 3000\n        });\n        return;\n      }\n\n      this.saving = true;\n      const id = this.route.snapshot.paramMap.get('id');\n      const payload = this.form.value;\n      const obs = id ? this.api.atualizar(+id, payload) : this.api.criar(payload);\n      obs.subscribe({\n        next: () => {\n          this.snack.open('Pedido criado com sucesso', 'Fechar', {\n            duration: 2000\n          });\n          this.router.navigate(['/pedidos']);\n        },\n        error: err => {\n          const msg = err?.error?.message || 'Erro ao criar pedido';\n          this.snack.open(msg, 'Fechar', {\n            duration: 4000\n          });\n          this.saving = false;\n        }\n      });\n    }\n\n  }\n\n  PedidosFormComponent.ɵfac = function PedidosFormComponent_Factory(t) {\n    return new (t || PedidosFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PedidosApiService), i0.ɵɵdirectiveInject(i3.ProdutosApiService), i0.ɵɵdirectiveInject(i4.ClientesApiService), i0.ɵɵdirectiveInject(i5.MatSnackBar), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i6.ActivatedRoute));\n  };\n\n  PedidosFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PedidosFormComponent,\n    selectors: [[\"app-pedidos-form\"]],\n    decls: 26,\n    vars: 9,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"formControlName\", \"clienteId\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [2, \"margin-bottom\", \"8px\"], [\"formArrayName\", \"itens\"], [\"class\", \"item-row\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-button\", \"\", \"type\", \"button\", \"routerLink\", \"/pedidos\"], [3, \"value\"], [1, \"item-row\", 3, \"formGroupName\"], [\"appearance\", \"fill\"], [3, \"value\", \"selectionChange\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"quantidade\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"step\", \"0.01\", \"formControlName\", \"valorUnitario\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"numeroSerie\"], [\"mat-button\", \"\", \"color\", \"warn\", \"type\", \"button\", 3, \"click\"]],\n    template: function PedidosFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n        i0.ɵɵtext(2, \"Pedido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function PedidosFormComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.salvar();\n        });\n        i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Cliente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-select\", 2);\n        i0.ɵɵtemplate(9, PedidosFormComponent_mat_option_9_Template, 2, 2, \"mat-option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, PedidosFormComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"strong\");\n        i0.ɵɵtext(13, \"Total:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"h3\");\n        i0.ɵɵtext(17, \"Itens\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 6);\n        i0.ɵɵtemplate(19, PedidosFormComponent_div_19_Template, 20, 3, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function PedidosFormComponent_Template_button_click_20_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(21, \"Adicionar Item\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 9);\n        i0.ɵɵtext(23, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 10);\n        i0.ɵɵtext(25, \"Cancelar\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.clientes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.clienteId.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(15, 6, ctx.total, \"BRL\"), \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.itens.controls);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.saving);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i8.MatButton, i9.MatError, i9.MatFormField, i9.MatLabel, i10.MatInput, i11.MatCard, i11.MatCardContent, i11.MatCardTitle, i12.MatSelect, i13.MatOption, i6.RouterLink, i7.CurrencyPipe],\n    styles: [\".full-width[_ngcontent-%COMP%]{width:100%}mat-card[_ngcontent-%COMP%]{max-width:500px;margin:0 auto}.item-row[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 120px 160px;gap:8px;align-items:end;margin-bottom:8px}\"]\n  });\n  return PedidosFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}