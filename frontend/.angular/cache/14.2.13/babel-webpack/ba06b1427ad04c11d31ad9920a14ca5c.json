{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../produtos-api.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/card\";\n\nfunction ProdutosFormComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Informe o nome\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ProdutosFormComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Informe o pre\\u00E7o\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ProdutosFormComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Pre\\u00E7o deve ser maior que 0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ProdutosFormComponent = /*#__PURE__*/(() => {\n  class ProdutosFormComponent {\n    constructor(fb, api, snack, router, route) {\n      this.fb = fb;\n      this.api = api;\n      this.snack = snack;\n      this.router = router;\n      this.route = route;\n      this.form = this.fb.group({\n        id: [undefined],\n        nome: ['', [Validators.required]],\n        preco: [null, [Validators.required, Validators.min(0.01)]]\n      });\n    }\n\n    ngOnInit() {\n      const id = this.route.snapshot.paramMap.get('id');\n\n      if (id) {\n        this.api.buscar(+id).subscribe(prod => this.form.patchValue(prod));\n      }\n    }\n\n    salvar() {\n      if (this.form.invalid) {\n        this.snack.open('Preencha os campos corretamente', 'Fechar', {\n          duration: 3000\n        });\n        return;\n      }\n\n      const produto = this.form.value;\n      this.api.salvar(produto).subscribe({\n        next: () => {\n          this.snack.open('Produto salvo', 'Fechar', {\n            duration: 2000\n          });\n          this.router.navigate(['/produtos']);\n        },\n        error: e => this.snack.open(e?.error?.message || 'Erro ao salvar', 'Fechar', {\n          duration: 4000\n        })\n      });\n    }\n\n  }\n\n  ProdutosFormComponent.ɵfac = function ProdutosFormComponent_Factory(t) {\n    return new (t || ProdutosFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProdutosApiService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  ProdutosFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProdutosFormComponent,\n    selectors: [[\"app-produtos-form\"]],\n    decls: 20,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"nome\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"number\", \"step\", \"0.01\", \"formControlName\", \"preco\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-button\", \"\", \"type\", \"button\", \"routerLink\", \"/produtos\"]],\n    template: function ProdutosFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n        i0.ɵɵtext(2, \"Produto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProdutosFormComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.salvar();\n        });\n        i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵtemplate(9, ProdutosFormComponent_mat_error_9_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 1)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Pre\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵtemplate(14, ProdutosFormComponent_mat_error_14_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(15, ProdutosFormComponent_mat_error_15_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 5);\n        i0.ɵɵtext(17, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 6);\n        i0.ɵɵtext(19, \"Cancelar\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.nome.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.preco.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.preco.hasError(\"min\"));\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i7.MatError, i7.MatFormField, i7.MatLabel, i8.MatInput, i9.MatCard, i9.MatCardContent, i9.MatCardTitle, i4.RouterLink],\n    styles: [\".full-width[_ngcontent-%COMP%]{width:100%}mat-card[_ngcontent-%COMP%]{max-width:500px;margin:0 auto}\"]\n  });\n  return ProdutosFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}