{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet PedidosFormComponent = class PedidosFormComponent {\n  constructor(fb, api, produtosApi, clientesApi, snack, router, route) {\n    this.fb = fb;\n    this.api = api;\n    this.produtosApi = produtosApi;\n    this.clientesApi = clientesApi;\n    this.snack = snack;\n    this.router = router;\n    this.route = route;\n    this.form = this.fb.group({\n      clienteId: [null, [Validators.required]],\n      itens: this.fb.array([])\n    });\n    this.saving = false;\n    this.produtos = [];\n    this.clientes = [];\n  }\n\n  ngOnInit() {\n    this.produtosApi.listar().subscribe(ps => this.produtos = ps);\n    this.clientesApi.listar().subscribe(cs => this.clientes = cs);\n    const id = this.route.snapshot.paramMap.get('id');\n\n    if (id) {// Para simplificar, usamos listar e filtramos; em real seria um endpoint de buscar por id\n      // O backend jÃ¡ suporta GET /pedidos/{id}\n    }\n  }\n\n  get itens() {\n    return this.form.get('itens');\n  }\n\n  addItem() {\n    this.itens.push(this.fb.group({\n      produtoId: [null, Validators.required],\n      quantidade: [1, [Validators.required, Validators.min(1)]],\n      valorUnitario: [null, [Validators.required, Validators.min(0.01)]],\n      numeroSerie: ['']\n    }));\n  }\n\n  removeItem(index) {\n    this.itens.removeAt(index);\n  }\n\n  salvar() {\n    if (this.form.invalid) {\n      this.snack.open('Preencha os campos corretamente', 'Fechar', {\n        duration: 3000\n      });\n      return;\n    }\n\n    this.saving = true;\n    const id = this.route.snapshot.paramMap.get('id');\n    const payload = this.form.value;\n    const obs = id ? this.api.atualizar(+id, payload) : this.api.criar(payload);\n    obs.subscribe({\n      next: () => {\n        this.snack.open('Pedido criado com sucesso', 'Fechar', {\n          duration: 2000\n        });\n        this.router.navigate(['/pedidos']);\n      },\n      error: err => {\n        const msg = err?.error?.message || 'Erro ao criar pedido';\n        this.snack.open(msg, 'Fechar', {\n          duration: 4000\n        });\n        this.saving = false;\n      }\n    });\n  }\n\n};\nPedidosFormComponent = __decorate([Component({\n  selector: 'app-pedidos-form',\n  templateUrl: './pedidos-form.component.html',\n  styleUrls: ['./pedidos-form.component.css']\n})], PedidosFormComponent);\nexport { PedidosFormComponent };","map":null,"metadata":{},"sourceType":"module"}